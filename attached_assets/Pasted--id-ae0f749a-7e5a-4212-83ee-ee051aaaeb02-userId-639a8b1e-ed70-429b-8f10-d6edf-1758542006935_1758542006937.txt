[
  {
    "id": "ae0f749a-7e5a-4212-83ee-ee051aaaeb02",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "d19cdf14-a986-41d7-8bde-f7b3817fd1a8",
    "title": "Chrome Extension with Google Auth & Storage",
    "description": "This 2-week plan will guide you through building a functional Chrome extension from the ground up. You will learn to create the extension's structure, manage local data storage, and integrate secure Google Authentication for user sign-in.",
    "duration": "2 weeks",
    "dailyTime": "1 hour per day",
    "skillLevel": "intermediate",
    "phases": "[{\"title\":\"Week 1: Core Extension & Local Data Storage\",\"duration\":\"Week 1\",\"description\":\"Build the fundamental structure of a Chrome extension, create a user interface, and learn how to store and retrieve data using Chrome's storage API.\",\"tasks\":[\"Day 1: Set up your project with the essential `manifest.json` (v3), `popup.html`, and `popup.js` files.\",\"Day 2: Build the basic UI for your popup using HTML and CSS, including input fields and buttons.\",\"Day 3: Implement logic to save user input to `chrome.storage.local`.\",\"Day 4: Write code to retrieve and display the saved data when the popup is opened.\",\"Day 5: Understand and add a background script (`service_worker`) for tasks like handling extension installation events.\",\"Day 6 & 7: Solidify your knowledge by building a simple 'Quick Note' extension that saves and lists multiple notes.\"]},{\"title\":\"Week 2: Google Authentication & Integration\",\"duration\":\"Week 2\",\"description\":\"Integrate Google Sign-In using OAuth2, manage user sessions, and combine all features into a finished, personalized project.\",\"tasks\":[\"Day 8: Set up a project in the Google Cloud Console and get your OAuth 2.0 Client ID.\",\"Day 9: Add the necessary permissions to your manifest and implement a 'Login' button that uses `chrome.identity.getAuthToken` to initiate the sign-in flow.\",\"Day 10: Use the retrieved auth token to fetch user profile information from the Google API.\",\"Day 11: Manage user state by saving profile info to storage and dynamically updating the UI to show a logged-in view.\",\"Day 12: Implement a 'Logout' button that revokes the token using `chrome.identity.removeCachedAuthToken` and clears user data.\",\"Day 13 & 14: Combine the notes functionality from Week 1 with the Google Auth. Tie saved data to the specific logged-in user and perform final testing and UI polishing.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-20T10:47:54.416Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "ec1a3220-a972-4273-8d9f-456137736bf9",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "56f9ba68-e972-435e-a49e-170910fda87b",
    "title": "Practical Cryptography: From Theory to Code",
    "description": "This 5-month plan is designed for individuals with basic math and programming knowledge to progressively learn cryptographic concepts and apply them by implementing core algorithms. You will journey from classical ciphers to modern symmetric and asymmetric systems, culminating in a solid practical understanding of cryptographic primitives.",
    "duration": "20 weeks",
    "dailyTime": "1 hour per day",
    "skillLevel": "beginner",
    "phases": "[{\"title\":\"Phase 1: Foundations and Classical Ciphers\",\"duration\":\"Weeks 1-4\",\"description\":\"Establish a strong foundation in the essential mathematics and historical context of cryptography. You will implement your first simple ciphers to understand the basic principles of encryption and cryptanalysis.\",\"tasks\":[\"Study foundational concepts: confidentiality, integrity, and availability.\",\"Review essential math: modular arithmetic, prime numbers, and basic probability.\",\"Implement the Caesar Cipher and a frequency analysis tool to break it.\",\"Implement the Vigen√®re Cipher, a classic polyalphabetic cipher.\"]},{\"title\":\"Phase 2: Symmetric Cryptography\",\"duration\":\"Weeks 5-10\",\"description\":\"Dive into modern secret-key cryptography, focusing on block ciphers and stream ciphers. You will understand the building blocks of systems like AES and implement a block cipher with a standard mode of operation.\",\"tasks\":[\"Learn about stream ciphers and implement a simple one like RC4.\",\"Study the structure of block ciphers, including SPNs and Feistel Networks.\",\"Understand the Advanced Encryption Standard (AES) conceptually.\",\"Implement a block cipher mode of operation, such as Cipher Block Chaining (CBC), using a provided block cipher primitive.\"]},{\"title\":\"Phase 3: Asymmetric Cryptography\",\"duration\":\"Weeks 11-16\",\"description\":\"Explore the world of public-key cryptography. This phase covers the mathematics behind key exchange and digital signatures, enabling you to implement two of the most influential algorithms in the field.\",\"tasks\":[\"Learn the principles of public-key cryptography and one-way functions.\",\"Study the number theory behind RSA: Euler's totient theorem and prime factorization.\",\"Implement the RSA algorithm for encryption and decryption.\",\"Understand and implement the Diffie-Hellman Key Exchange protocol.\"]},{\"title\":\"Phase 4: Hashing and Modern Applications\",\"duration\":\"Weeks 17-20\",\"description\":\"Complete your toolkit by learning about cryptographic hash functions and message authentication codes. You'll finish by seeing how all these primitives come together to secure modern communications.\",\"tasks\":[\"Study the properties of cryptographic hash functions (e.g., collision resistance).\",\"Understand the structure of the SHA family of algorithms.\",\"Learn about Message Authentication Codes (MACs) and their purpose.\",\"Implement HMAC (Hash-based Message Authentication Code) using a standard hash function.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-19T03:53:24.521Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "db07a113-f21f-4c33-a64c-8d7a53c9e96c",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "abc6f22c-846b-4f25-a894-a47445b52e9a",
    "title": "Build a Browser-Based Screen Recorder in 2 Weeks",
    "description": "This 2-week plan will guide you through building a fully functional browser-based screen recorder. Leveraging your existing React skills, you will master the necessary browser Media APIs to capture screen, camera, and microphone audio, culminating in a complete application perfect for creating tutorials.",
    "duration": "2 weeks",
    "dailyTime": "1 hour per day",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Core Browser APIs & Project Setup\",\"duration\":\"Week 1\",\"description\":\"This week focuses on understanding the essential browser APIs for capturing media. You'll work with vanilla JavaScript first to learn these concepts before integrating them into a React project.\",\"tasks\":[\"Day 1-2: Master Screen Capture: Study and implement `getDisplayMedia()` to capture the user's screen. Create a simple HTML page to test this.\",\"Day 3-4: Integrate Camera & Audio: Learn `getUserMedia()` to access the webcam and microphone, then explore how to combine these media streams.\",\"Day 5-6: Record & Save Data: Get hands-on with the `MediaRecorder` API to record the combined stream and handle the resulting data chunks.\",\"Day 7: Set Up Your React Environment: Initialize a new React project and create the basic component structure for your recorder UI.\"]},{\"title\":\"Phase 2: React Integration & Feature Implementation\",\"duration\":\"Week 2\",\"description\":\"Now you'll apply your API knowledge to build the screen recorder application using React. You will create the user interface and wire up all the recording functionality.\",\"tasks\":[\"Day 8-9: Build the UI: Create React components for the control buttons (Start, Stop), video preview area, and download link.\",\"Day 10-11: Implement Recording Logic: Use React hooks (`useState`, `useEffect`, `useRef`) to manage media streams, recording state, and the `MediaRecorder` instance.\",\"Day 12-13: Handle the Video Output: Implement the logic to stop the recording, create a downloadable video file from the recorded data, and present it to the user.\",\"Day 14: Final Polish & Review: Refine the user interface, add user-facing messages (e.g., 'Recording...'), and clean up your code for clarity.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-17T15:48:13.004Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "69f31e41-fe11-4486-8cb8-eb2fdfa26c23",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "ba7575ad-065f-43c0-aebe-c5ba97bd7f64",
    "title": "Decentralized Finance: A 3-Month Beginner's Guide",
    "description": "This 12-week plan is designed for beginners curious about decentralized finance. Starting with the fundamentals of Bitcoin, you will progress to understanding smart contracts, and then take a deep dive into the world of DeFi, exploring key use cases like digital gold, lending, borrowing, stablecoins, and decentralized exchanges. You'll finish with a clear understanding of the technology's strengths, weaknesses, and potential.",
    "duration": "12 weeks",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: The Foundation - Bitcoin & Blockchain\",\"duration\":\"Weeks 1-3\",\"description\":\"Understand the 'why' behind Bitcoin. Learn about the core concepts of blockchain technology, decentralization, and how Bitcoin established itself as a 'Digital Gold' use case.\",\"tasks\":[\"Read and summarize the original Bitcoin Whitepaper by Satoshi Nakamoto.\",\"Learn the basics of cryptographic principles like public/private keys and hashing.\",\"Understand the Proof-of-Work consensus mechanism, its strengths (security) and weaknesses (energy use).\",\"Explore the concepts of digital scarcity, censorship resistance, and network effects.\"]},{\"title\":\"Phase 2: The Evolution - Ethereum & Smart Contracts\",\"duration\":\"Weeks 4-6\",\"description\":\"Move beyond digital currency to programmable money. This phase introduces Ethereum, the concept of smart contracts, and the explosion of possibilities they unlock.\",\"tasks\":[\"Learn what makes Ethereum different from Bitcoin (e.g., Turing-completeness).\",\"Deeply understand the concept of a 'smart contract' and its implications for automation and trust.\",\"Study the role of 'Gas' fees and the blockchain scalability problem.\",\"Explore early use cases built on smart contracts, such as initial coin offerings (ICOs) and non-fungible tokens (NFTs).\"]},{\"title\":\"Phase 3: The Application - Deep Dive into DeFi\",\"duration\":\"Weeks 7-10\",\"description\":\"A focused exploration of the Decentralized Finance (DeFi) ecosystem. You will learn about the core financial services being rebuilt on the blockchain, directly addressing your interest in key use cases.\",\"tasks\":[\"Study the function and different types of Stablecoins (e.g., fiat-collateralized like USDC, crypto-collateralized like DAI).\",\"Explore decentralized borrowing and lending protocols (e.g., how Aave or Compound work).\",\"Learn the mechanics of Automated Market Makers (AMMs) and Decentralized Exchanges (DEXs) like Uniswap.\",\"Grasp the concept of 'Yield Farming' and 'Liquidity Providing', including the potential returns and risks (e.g., impermanent loss).\",\"Investigate the use of decentralized networks for payments, remittances, and other financial applications.\"]},{\"title\":\"Phase 4: The Broader Landscape & Future Outlook\",\"duration\":\"Weeks 11-12\",\"description\":\"Zoom out to see the entire ecosystem. Learn about how the space is evolving to address its limitations and what the future might hold for decentralized infrastructure.\",\"tasks\":[\"Research Layer 2 scaling solutions (e.g., Rollups like Arbitrum/Optimism) and their role in making networks faster and cheaper.\",\"Get a brief overview of other major smart contract platforms and their different approaches.\",\"Consider the ongoing regulatory conversations and societal challenges facing DeFi and crypto.\",\"Synthesize all your learnings, review the biggest strengths and weaknesses, and form your own informed opinion on the technology's importance.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-15T21:51:45.022Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "a0cd8059-b145-4204-9ace-8b2694a37854",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "705e3c72-efe7-4db8-893d-ddaeb4ea67d2",
    "title": "From Zero to StarkNet: A 3-Month Guide to zkSTARKs",
    "description": "This 12-week plan is designed for individuals with a basic understanding of cryptography to gain a deep conceptual knowledge of zkSTARKs, from their mathematical foundations to their practical application in the StarkNet L2 scaling solution.",
    "duration": "12 weeks",
    "dailyTime": "1 hour per day",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Foundations in Math & Cryptography\",\"duration\":\"Weeks 1-3\",\"description\":\"Build the fundamental mathematical and cryptographic knowledge required to understand advanced proof systems. This phase focuses on the 'why' behind the building blocks of STARKs.\",\"tasks\":[\"Study Finite Fields (Galois Fields) to understand the mathematical environment where STARKs operate.\",\"Learn about Polynomials, their properties, and the concept of low-degree extensions.\",\"Understand the role of Cryptographic Hash Functions and Merkle Trees for committing to data.\",\"Grasp the basic model of a proof system: Prover, Verifier, Completeness, and Soundness.\"]},{\"title\":\"Phase 2: Core Concepts of zkSTARKs\",\"duration\":\"Weeks 4-6\",\"description\":\"Dive into the high-level architecture and a key component of STARKs. You will learn how computations are translated into a format that can be proven efficiently.\",\"tasks\":[\"Learn what a Zero-Knowledge Proof is and understand the high-level differences between ZK-SNARKs and ZK-STARKs.\",\"Study Arithmetization: The process of converting a computational statement into a set of polynomial constraints (Algebraic Intermediate Representation - AIR).\",\"Deep dive into the FRI (Fast Reed-Solomon Interactive Oracle Proof of Proximity) protocol, which is the cornerstone of how STARKs work.\",\"Conceptual Project 1: Draft an explanation or diagram of how a simple computation (e.g., Fibonacci sequence) can be 'arithmetized' into a polynomial.\"]},{\"title\":\"Phase 3: The Complete STARK Protocol and its Properties\",\"duration\":\"Weeks 7-9\",\"description\":\"Connect all the components from the previous phases to understand the full STARK proof generation and verification flow, focusing on the properties that make them powerful.\",\"tasks\":[\"Trace the entire lifecycle of a STARK proof, from the execution trace to the final proof string generated by the FRI protocol.\",\"Analyze the 'S' and 'T' in STARKs: Scalability (logarithmic proof size and verifier complexity) and Transparency (no trusted setup).\",\"Understand the role of the Fiat-Shamir heuristic to transform an interactive proof into a non-interactive one.\",\"Consolidate your knowledge by watching technical talks from the StarkWare team and reading their blog posts on the STARK anatomy.\"]},{\"title\":\"Phase 4: Applying Knowledge to StarkNet\",\"duration\":\"Weeks 10-12\",\"description\":\"With a strong foundation in STARKs, you will now explore how they are used in practice to build StarkNet, a leading Ethereum Layer-2 scaling solution.\",\"tasks\":[\"Study the StarkNet architecture: Understand the roles of the Sequencer, Prover, and Verifier, and how the system interacts with Ethereum L1.\",\"Get a conceptual introduction to Cairo, the programming language for writing provable programs, and how it generates the execution trace for the STARK prover.\",\"Learn about key StarkNet design choices, such as native Account Abstraction and the state transition proving mechanism.\",\"Conceptual Project 2: Create a diagram illustrating the lifecycle of a transaction on StarkNet, from user submission to its inclusion in a proof verified on Ethereum.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-15T20:36:36.743Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": [
      {
        "id": "8394fdf0-014f-462a-88a1-fb8e53c5a1a9",
        "courseId": "a0cd8059-b145-4204-9ace-8b2694a37854",
        "phaseIndex": 0,
        "taskIndex": 0,
        "isCompleted": true,
        "completedAt": "2025-09-15T21:09:55.132Z"
      }
    ]
  },
  {
    "id": "72a3d3a0-7f67-43f8-a53c-703392c53628",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "77c951ea-bbd9-4c6c-aca1-ef7ef3f81c2c",
    "title": "Learning Plan: Quantum-Proof Digital Signatures for Crypto Wallets",
    "description": "An 8-week plan to learn quantum-proof digital signature schemes, building on your knowledge of ECC/Schnorr. You will study NIST-standardized algorithms like CRYSTALS-Dilithium and create a proof-of-concept application for a quantum-resistant crypto wallet.",
    "duration": "8 weeks",
    "dailyTime": "1 hour daily",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Foundations of Post-Quantum Cryptography (PQC)\",\"duration\":\"Weeks 1-2\",\"description\":\"Understand the threat quantum computing poses to current signature schemes like ECDSA (used in Bitcoin/Ethereum) and get a high-level overview of the major categories of PQC solutions.\",\"tasks\":[\"Study Shor's Algorithm and how it breaks elliptic curve and RSA cryptography.\",\"Get familiar with the NIST PQC Standardization process and its selected algorithms.\",\"Learn the high-level concepts of the main PQC families: lattice-based, hash-based, code-based, and isogeny-based cryptography.\",\"Compare the general trade-offs (key size, signature size, performance) of PQC vs. classical schemes like ECC.\"]},{\"title\":\"Phase 2: Deep Dive into Lattice-Based Signatures (CRYSTALS-Dilithium)\",\"duration\":\"Weeks 3-5\",\"description\":\"Focus on CRYSTALS-Dilithium, the primary signature algorithm selected by NIST, which is a leading candidate for future applications. Your background in Schnorr will be helpful here as they share a similar high-level structure.\",\"tasks\":[\"Learn the basics of lattice cryptography: the Learning With Errors (LWE) and Shortest Integer Solution (SIS) problems.\",\"Study the 'Fiat-Shamir with Aborts' technique, which is the foundation for Dilithium.\",\"Analyze the key generation, signing, and verification algorithms of Dilithium.\",\"Find a cryptography library (e.g., Open Quantum Safe 'liboqs') and run examples to generate keys, sign messages, and verify signatures using Dilithium.\"]},{\"title\":\"Phase 3: Exploring Hash-Based & Alternative Signatures\",\"duration\":\"Week 6\",\"description\":\"Broaden your understanding by studying SPHINCS+, another NIST standard. Hash-based signatures have different security assumptions and performance characteristics that are important to understand.\",\"tasks\":[\"Learn the difference between stateful (LMS/HSS) and stateless (SPHINCS+) hash-based signatures.\",\"Understand the core construction of SPHINCS+ and why its security is considered very conservative.\",\"Compare the signature sizes and performance of SPHINCS+ against Dilithium.\",\"Briefly research Falcon, another lattice-based signature standard, to understand its trade-offs (e.g., smaller signatures).\"]},{\"title\":\"Phase 4: Project - Prototyping a PQC Wallet\",\"duration\":\"Weeks 7-8\",\"description\":\"Apply your knowledge to the specific goal of crypto wallets. This phase focuses on building a proof-of-concept that mimics the cryptographic functions of a Bitcoin or Ethereum wallet using a PQC algorithm.\",\"tasks\":[\"Research the challenges of integrating PQC into blockchains (e.g., larger signature/key sizes affecting transaction fees and block size).\",\"Look into current Ethereum Improvement Proposals (EIPs) or Bitcoin Improvement Proposals (BIPs) discussing PQC integration.\",\"Using a library like liboqs, write a command-line application that performs the core functions of a wallet:\",\"  - Generates a PQC key pair (e.g., Dilithium).\",\"  - Simulates creating a transaction (e.g., by hashing a simple text message).\",\"  - Signs the transaction hash with the PQC private key.\",\"  - Verifies the signature using the PQC public key.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-13T19:50:02.856Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "6f824c52-5b63-4e7d-8595-7a7639d01332",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "ee661f82-e199-463e-aba1-b1cb2430c8fb",
    "title": "Mastering Quantum Mechanics Notation",
    "description": "An 8-week action plan designed to take you from a high school math and physics background to confidently understanding the mathematical notations used in quantum mechanics scientific papers.",
    "duration": "8 weeks",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Building the Mathematical Foundation\",\"duration\":\"Weeks 1-2\",\"description\":\"This phase focuses on the essential mathematics that underpins quantum mechanics, bridging the gap from high school math to the required concepts in linear algebra and complex numbers.\",\"tasks\":[\"Review complex numbers: conjugates, modulus, and Euler's formula.\",\"Learn the fundamentals of linear algebra: vector spaces, basis vectors, and linear independence.\",\"Understand matrix operations: addition, multiplication, transpose, and the Hermitian conjugate.\",\"Study the concepts of eigenvalues and eigenvectors, which are crucial for describing quantum states.\"]},{\"title\":\"Phase 2: Introduction to Bra-Ket Notation\",\"duration\":\"Weeks 3-4\",\"description\":\"Dive into the core language of quantum mechanics: Dirac's bra-ket notation. You will learn how to represent quantum states, measurements, and operators in this powerful formalism.\",\"tasks\":[\"Learn to represent quantum states as 'kets' |œà‚ü© and their duals as 'bras' ‚ü®œà|.\",\"Understand how the inner product ‚ü®œÜ|œà‚ü© represents the probability amplitude of transitioning from state œà to state œÜ.\",\"Explore how 'operators' act on kets to represent physical observables.\",\"Practice translating simple quantum concepts into bra-ket notation.\"]},{\"title\":\"Phase 3: Key Operators and Equations\",\"duration\":\"Weeks 5-6\",\"description\":\"Familiarize yourself with the most common symbols, operators, and equations you will encounter in research papers, including the famous Schr√∂dinger equation.\",\"tasks\":[\"Identify and understand the notation for key operators like the Hamiltonian (ƒ§), Momentum (pÃÇ), and Position (xÃÇ).\",\"Deconstruct the time-dependent and time-independent Schr√∂dinger equations.\",\"Learn about the notation for commutators [√Ç, BÃÇ] and their relation to the uncertainty principle.\",\"Recognize and interpret the notation for expectation values ‚ü®√Ç‚ü©.\"]},{\"title\":\"Phase 4: Application and Paper Analysis\",\"duration\":\"Weeks 7-8\",\"description\":\"Apply all your acquired knowledge by analyzing the mathematical notation in real academic texts. This phase focuses on practical application and building reading confidence.\",\"tasks\":[\"Project 1: Analyze a chapter from a standard QM textbook (e.g., Griffiths) on a simple system like the 'particle in a box', identifying and translating all notation.\",\"Project 2: Select a short, accessible paper from a source like arXiv.org and focus on understanding the mathematical formalism in the methodology section.\",\"Create and maintain a personal glossary of quantum notations encountered.\",\"Practice reading equations aloud to yourself to build fluency.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-12T22:36:41.679Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": [
      {
        "id": "fddaa4e1-353c-496a-beb3-f435b4f4d5c9",
        "courseId": "6f824c52-5b63-4e7d-8595-7a7639d01332",
        "phaseIndex": 0,
        "taskIndex": 0,
        "isCompleted": true,
        "completedAt": "2025-09-12T23:15:01.802Z"
      },
      {
        "id": "f1eb002c-4cc7-4433-ad91-60cf4d91724b",
        "courseId": "6f824c52-5b63-4e7d-8595-7a7639d01332",
        "phaseIndex": 0,
        "taskIndex": 1,
        "isCompleted": true,
        "completedAt": "2025-09-12T23:15:04.208Z"
      },
      {
        "id": "3b7d62f9-7b3a-492c-b253-d55350524a2f",
        "courseId": "6f824c52-5b63-4e7d-8595-7a7639d01332",
        "phaseIndex": 0,
        "taskIndex": 2,
        "isCompleted": true,
        "completedAt": "2025-09-12T23:15:06.367Z"
      },
      {
        "id": "5e25a536-e7af-4df5-a7de-ef837b44f541",
        "courseId": "6f824c52-5b63-4e7d-8595-7a7639d01332",
        "phaseIndex": 0,
        "taskIndex": 3,
        "isCompleted": true,
        "completedAt": "2025-09-12T23:15:09.224Z"
      },
      {
        "id": "9870d9c3-3f7d-4033-ba76-b1f8d1b593f4",
        "courseId": "6f824c52-5b63-4e7d-8595-7a7639d01332",
        "phaseIndex": 1,
        "taskIndex": 0,
        "isCompleted": true,
        "completedAt": "2025-09-13T00:36:37.096Z"
      },
      {
        "id": "a9af7961-625b-4756-9c17-73d3590ba25c",
        "courseId": "6f824c52-5b63-4e7d-8595-7a7639d01332",
        "phaseIndex": 1,
        "taskIndex": 1,
        "isCompleted": true,
        "completedAt": "2025-09-13T00:36:40.271Z"
      },
      {
        "id": "00706810-e349-4dae-aa93-a88d2953680b",
        "courseId": "6f824c52-5b63-4e7d-8595-7a7639d01332",
        "phaseIndex": 1,
        "taskIndex": 2,
        "isCompleted": true,
        "completedAt": "2025-09-13T12:38:53.179Z"
      }
    ]
  },
  {
    "id": "f0546e8e-c495-4a3c-9e1d-4ae9447b98ac",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "4e3ad3b7-cebc-44c7-b833-a7d4db425eb4",
    "title": "Solidity & Web3 Security Researcher Pathway",
    "description": "This 3-month plan is designed to transition you from a developer with basic Solidity knowledge to a budding Web3 security researcher. You will deepen your understanding of the EVM, master common vulnerability patterns, learn professional auditing tools, and gain practical experience by analyzing contracts and participating in security challenges.",
    "duration": "12 weeks",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Advanced Solidity & EVM Fundamentals\",\"duration\":\"Weeks 1-3\",\"description\":\"Strengthen your core knowledge by moving beyond basic Solidity. This phase focuses on the low-level mechanics of the EVM, which is critical for understanding security vulnerabilities.\",\"tasks\":[\"Study advanced Solidity concepts: delegatecall, assembly (Yul), memory vs. storage, and contract creation/destruction patterns.\",\"Learn the fundamentals of the Ethereum Virtual Machine (EVM), including the stack, memory, storage, and opcodes.\",\"Complete the first 10 levels of the Ethernaut CTF to apply these concepts in a hands-on environment.\"]},{\"title\":\"Phase 2: Common Vulnerabilities & Exploit Analysis\",\"duration\":\"Weeks 4-7\",\"description\":\"Learn to think like an attacker. This phase is dedicated to studying the most common smart contract vulnerabilities and analyzing historical hacks to understand their root causes.\",\"tasks\":[\"Systematically study the Smart Contract Weakness Classification (SWC) registry, focusing on critical issues like Reentrancy, Integer Overflows/Underflows, and Access Control.\",\"Read detailed post-mortems of major DeFi hacks (e.g., The DAO, Parity Wallet, recent bridge exploits).\",\"Continue progressing through Ethernaut and start exploring challenges on Damn Vulnerable DeFi.\"]},{\"title\":\"Phase 3: Security Tooling & Auditing Methodology\",\"duration\":\"Weeks 8-10\",\"description\":\"Get familiar with the professional toolset used by security auditors. You will learn to use static and dynamic analysis tools and understand the structure of a professional audit report.\",\"tasks\":[\"Install and learn to use static analysis tools like Slither to automatically detect vulnerabilities in codebases.\",\"Get hands-on with the Foundry framework for advanced testing, fuzzing, and formal verification.\",\"Read at least five public audit reports from top firms (e.g., Trail of Bits, OpenZeppelin) to understand how findings are documented and presented.\"]},{\"title\":\"Phase 4: Practical Application & Bug Bounties\",\"duration\":\"Weeks 11-12\",\"description\":\"Apply your accumulated knowledge to real-world scenarios. This phase focuses on performing practice audits and getting involved with bug bounty platforms to start building your track record.\",\"tasks\":[\"Select an open-source protocol and perform a mock audit. Document your findings in a personal report.\",\"Join a bug bounty platform like Code4rena or Immunefi. Start by studying past submissions and reports before trying to find new bugs.\",\"Engage with the Web3 security community on Twitter and Discord to stay updated on new vulnerabilities and techniques.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-12T14:52:18.373Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "c0f28c19-bdb8-4850-8aba-4eabf7dcffc0",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "5b8b6016-b46e-41fb-8a0d-1885602543a6",
    "title": "Mastering Zero-Knowledge Proofs: A Deep Dive into zk-SNARKs with Rust",
    "description": "This 8-week plan provides a deep mathematical and practical introduction to Zero-Knowledge Proofs for a beginner. You will start with the foundational cryptography and mathematics, then progress through key zk-SNARK protocols like Groth16 and PLONK, and finally apply your knowledge by building a simple ZKP application in Rust.",
    "duration": "8 weeks",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Mathematical & Cryptographic Foundations\",\"duration\":\"Weeks 1-2\",\"description\":\"Establish the fundamental mathematical concepts that underpin all modern zero-knowledge proof systems. This phase is critical for understanding the 'how' and 'why' behind the protocols.\",\"tasks\":[\"Study Modular Arithmetic and Finite Fields (Galois Fields).\",\"Learn the basics of Elliptic Curve Cryptography (ECC), focusing on pairings.\",\"Understand polynomial commitments and their properties.\",\"Read introductory materials on the core concepts of Zero-Knowledge.\"]},{\"title\":\"Phase 2: Arithmetic Circuits & Groth16\",\"duration\":\"Weeks 3-4\",\"description\":\"Dive into the mechanics of zk-SNARKs by learning how to represent computations as circuits and exploring the seminal Groth16 protocol.\",\"tasks\":[\"Learn to convert computational problems into Rank-1 Constraint Systems (R1CS).\",\"Study the mathematical construction of the Groth16 protocol: Setup, Prover, and Verifier.\",\"Work through a simple R1CS example on paper (e.g., proving knowledge of `x` for `x^3 + x + 5 = 35`).\",\"Project 1: Write a small program to generate the R1CS for a simple computation.\"]},{\"title\":\"Phase 3: Modern Universal SNARKs - PLONK & Lookups\",\"duration\":\"Weeks 5-6\",\"description\":\"Explore the more flexible and efficient PLONK protocol, understanding its universal setup and the power of lookup arguments.\",\"tasks\":[\"Understand PLONK's arithmetization and how it differs from R1CS.\",\"Study the role of permutation checks in enforcing circuit constraints.\",\"Learn the concept of lookup arguments (like plookup) and their use cases.\",\"Compare the tradeoffs between Groth16 (trusted setup, efficiency) and PLONK (universal setup, flexibility).\"]},{\"title\":\"Phase 4: Folding Schemes & Practical Rust Implementation\",\"duration\":\"Weeks 7-8\",\"description\":\"Get a glimpse into cutting-edge techniques like folding schemes and bring all the theory together by implementing a real ZKP system using Rust.\",\"tasks\":[\"Read high-level overviews of folding schemes (e.g., Nova) to understand their purpose in Incrementally Verifiable Computation (IVC).\",\"Set up a Rust development environment with a ZK library like `arkworks` or `bellman`.\",\"Follow tutorials to implement a simple circuit using the chosen Rust library.\",\"Project 2: Build, test, and run a complete ZKP system for your circuit, from trusted setup to proof generation and verification.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-12T05:43:20.109Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "fa0e33eb-ec10-4711-adf6-c0826a6bfac1",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "6b8c95d5-be0d-446c-be29-302c5f0ea95e",
    "title": "4-Week SQL Plan: From Beginner to Data Analyst",
    "description": "This 4-week plan is designed for absolute beginners to learn SQL from scratch. You will progress from basic queries for data analysis to inserting and modifying data, culminating in a hands-on project to solidify your skills.",
    "duration": "4 weeks",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Foundations of SQL & Basic Queries\",\"duration\":\"Week 1\",\"description\":\"Set up your database environment and master the fundamental commands for retrieving data. You'll learn how to select specific columns and filter rows based on conditions.\",\"tasks\":[\"Install a database management system. SQLite with a GUI like DB Browser is great for beginners.\",\"Learn the basic syntax: `SELECT`, `FROM`, and `WHERE`.\",\"Practice filtering data using operators like `=`, `>`, `<`, `AND`, `OR`, and `IN`.\",\"Understand `ORDER BY` to sort results and `LIMIT` to restrict the number of rows returned.\"]},{\"title\":\"Phase 2: Aggregating & Joining Data\",\"duration\":\"Week 2\",\"description\":\"Move beyond single-table queries. This week, you'll learn to combine data from multiple tables and perform calculations to summarize information.\",\"tasks\":[\"Master aggregate functions: `COUNT()`, `SUM()`, `AVG()`, `MIN()`, `MAX()`.\",\"Learn to group data using `GROUP BY` and filter those groups with `HAVING`.\",\"Understand and practice different types of `JOINs` (especially `INNER JOIN` and `LEFT JOIN`).\",\"Complete practice problems that involve joining and aggregating data from at least two tables.\"]},{\"title\":\"Phase 3: Data Manipulation & Insertion\",\"duration\":\"Week 3\",\"description\":\"Focus on modifying the database itself. You'll learn how to add, change, and remove data, a crucial skill for managing databases.\",\"tasks\":[\"Learn to add new records to a table using the `INSERT INTO` statement.\",\"Practice modifying existing records with the `UPDATE` statement and a `WHERE` clause.\",\"Understand how to remove data safely using the `DELETE` statement.\",\"Learn about primary keys, foreign keys, and basic table creation with `CREATE TABLE`.\"]},{\"title\":\"Phase 4: Practical Application & Capstone Project\",\"duration\":\"Week 4\",\"description\":\"Apply everything you've learned by building a small, practical database project from scratch. This will solidify your understanding and give you a tangible result.\",\"tasks\":[\"Design a simple database schema for a personal project (e.g., a movie library, a personal budget tracker, or a list of books).\",\"Create the tables for your project using `CREATE TABLE`.\",\"Populate your tables with at least 15-20 rows of sample data using `INSERT INTO`.\",\"Write at least 5 different analytical queries to answer questions about your data (e.g., 'What is the average movie rating?', 'What were my total expenses in July?').\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-09T21:17:10.149Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "f78ca3e4-8625-4ae7-ba7c-5a2cf9a2fce6",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "f241556f-3b49-4619-aadc-5cd7c15e8853",
    "title": "4-Week Senior Software Engineer Interview Prep",
    "description": "This is an intensive, 4-week action plan designed for an experienced engineer who is new to the senior-level interview preparation process. Given the tight timeline of one hour per day, this plan focuses on the highest-impact areas: Data Structures & Algorithms (DSA), System Design, and Behavioral questions.",
    "duration": "4 weeks",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Week 1: DSA Foundations & Refresh\",\"duration\":\"Weeks 1\",\"description\":\"Solidify your understanding of fundamental data structures and algorithms. The goal is to build confidence and speed in solving common coding challenges.\",\"tasks\":[\"Review Big O notation to analyze time and space complexity.\",\"Focus on core data structures: Arrays, Strings, Linked Lists, Stacks, and Queues.\",\"Solve 5-7 Easy to Medium problems on platforms like LeetCode covering these topics.\"]},{\"title\":\"Week 2: Advanced DSA & Intro to System Design\",\"duration\":\"Weeks 2\",\"description\":\"Tackle more complex data structures and begin learning the fundamental building blocks of scalable systems, a key component of senior interviews.\",\"tasks\":[\"Study advanced data structures: Trees, Tries, Heaps, and Graphs.\",\"Solve 5-7 Medium problems focusing on these new topics and common patterns like Breadth-First Search (BFS) and Depth-First Search (DFS).\",\"Watch introductory videos on system design concepts: Load Balancing, Caching, CDNs, and SQL vs. NoSQL databases.\"]},{\"title\":\"Week 3: System Design Deep Dive\",\"duration\":\"Weeks 3\",\"description\":\"Dedicate this week to applying system design concepts. You will learn a structured approach to solving open-ended design problems.\",\"tasks\":[\"Learn a framework for answering system design questions (e.g., clarify requirements, estimate scale, design components, identify bottlenecks).\",\"Walk through 2-3 classic system design problems, such as 'Design a URL Shortener' or 'Design a Twitter Feed'.\",\"Practice drawing high-level architecture diagrams and articulating the trade-offs of your design choices.\"]},{\"title\":\"Week 4: Behavioral Prep & Mock Interviews\",\"duration\":\"Weeks 4\",\"description\":\"Prepare your personal project stories and simulate the interview experience to identify and address any remaining weak points under pressure.\",\"tasks\":[\"Prepare 5 detailed stories about your past projects using the STAR method (Situation, Task, Action, Result).\",\"Conduct at least one mock coding interview with a peer or using a platform like Pramp.\",\"Conduct at least one mock system design interview to practice communication and problem-solving in real-time.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-09T20:25:28.953Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "d2d31724-141f-4593-8293-4b00ea9fd488",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "9d37992f-4195-4580-9b78-e53efcfc90ed",
    "title": "Special Relativity: A 4-Week Mathematical Deep Dive",
    "description": "This 4-week plan is designed to build a solid, math-focused understanding of Special Relativity. Starting from the foundational postulates, you will progress through Lorentz transformations, relativistic kinematics, and dynamics, culminating in the ability to solve a variety of challenging physics problems.",
    "duration": "4 weeks",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Foundations & The Spacetime Framework\",\"duration\":\"Week 1\",\"description\":\"Establish the fundamental principles of Special Relativity and learn the mathematical tools to describe events in spacetime, focusing on the Lorentz transformations.\",\"tasks\":[\"Review the two postulates of Special Relativity (Principle of Relativity and Constancy of the Speed of Light).\",\"Study the concept of spacetime and practice drawing and interpreting Minkowski diagrams.\",\"Derive and understand the Lorentz transformation equations for space and time coordinates.\",\"Solve basic problems involving transforming coordinates between inertial reference frames.\"]},{\"title\":\"Phase 2: Kinematic Consequences\",\"duration\":\"Week 2\",\"description\":\"Explore the direct and often counter-intuitive consequences of the Lorentz transformations, such as time dilation and length contraction, and master the relativistic velocity addition.\",\"tasks\":[\"Derive the formulas for time dilation and length contraction from the Lorentz transformations.\",\"Work through problem sets on time dilation (e.g., muon decay) and length contraction.\",\"Understand the concept of relativity of simultaneity and solve problems related to it.\",\"Learn and apply the relativistic velocity addition formula to problems with objects moving at high speeds.\"]},{\"title\":\"Phase 3: Relativistic Dynamics\",\"duration\":\"Week 3\",\"description\":\"Move beyond motion (kinematics) to the causes of motion (dynamics), introducing the concepts of relativistic momentum, mass, and energy.\",\"tasks\":[\"Define relativistic momentum and understand how it differs from its classical counterpart.\",\"Study the derivation and meaning of the mass-energy equivalence, E=mc¬≤.\",\"Learn the full energy-momentum relation (E¬≤ = (pc)¬≤ + (m‚ÇÄc¬≤)¬≤) and its applications.\",\"Solve problems involving conservation of energy and momentum in relativistic collisions and particle decays.\"]},{\"title\":\"Phase 4: Consolidation and Problem Solving\",\"duration\":\"Week 4\",\"description\":\"Synthesize all the concepts learned by tackling complex problems, exploring famous paradoxes, and solidifying your mathematical understanding.\",\"tasks\":[\"Work through a comprehensive review problem set covering all topics from weeks 1-3.\",\"Study the mathematical resolution of the Twin Paradox using spacetime diagrams and time dilation.\",\"Learn about the relativistic Doppler effect for light and solve related problems.\",\"Review all mathematical derivations from the course to ensure a deep understanding.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-09T19:44:32.259Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "6b16ee16-8f2a-4bce-9b6d-15865d952002",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "def1f354-7c02-4bd8-9904-c3e576ca4101",
    "title": "Quantum Computing Mastery: From Beginner to Practitioner",
    "description": "This 12-week plan is designed for beginners to build a solid foundation in quantum computing. You'll progress from essential math and physics concepts to writing and running your own quantum algorithms on simulators and real quantum hardware.",
    "duration": "12 weeks",
    "dailyTime": "4 hours/week",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Foundational Principles\",\"duration\":\"Weeks 1-4\",\"description\":\"Master the essential linear algebra and quantum mechanics concepts that form the bedrock of quantum computing.\",\"tasks\":[\"Review key linear algebra concepts: vectors, matrices, and eigenvalues using a resource like Khan Academy.\",\"Study the core principles of quantum mechanics: superposition, entanglement, and measurement.\",\"Understand the qubit and its representation using the Bloch sphere.\",\"Learn about fundamental single-qubit gates (Hadamard, Pauli-X/Y/Z) and the two-qubit CNOT gate.\"]},{\"title\":\"Phase 2: Quantum Circuits and Algorithms\",\"duration\":\"Weeks 5-8\",\"description\":\"Transition from theory to practice by learning to build quantum circuits and implementing foundational quantum algorithms using a framework like IBM's Qiskit.\",\"tasks\":[\"Set up your Python environment and install the Qiskit SDK.\",\"Follow the official Qiskit tutorials to build and simulate your first quantum circuits, such as a Bell state.\",\"Implement a simple quantum algorithm, like the Deutsch-Jozsa algorithm, to see quantum advantage in action.\",\"Start your first mini-project: building a true quantum random number generator.\"]},{\"title\":\"Phase 3: Real-World Application & Exploration\",\"duration\":\"Weeks 9-12\",\"description\":\"Apply your skills by running code on real quantum hardware and completing a capstone project. Explore the current landscape and future directions of the field.\",\"tasks\":[\"Use the IBM Quantum platform to run one of your simple circuits on a real quantum computer and compare the results with the simulator.\",\"Work on a capstone project: implement a simplified version of Grover's search algorithm for a small database.\",\"Explore an advanced topic conceptually, such as quantum error correction or the basics of quantum machine learning.\",\"Follow recent developments in the field by reading articles from Quanta Magazine or the Qiskit blog.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-07T21:51:23.859Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "98d73722-868f-4b15-b94c-9cdca086dbb3",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "f99defba-0013-4301-9341-ac2b534f6141",
    "title": "1-Hour Crash Course: Taylor Series in Physics",
    "description": "A focused, one-hour session to grasp the core concept of Taylor series and see how it's used to simplify complex problems in physics, like the simple pendulum.",
    "duration": "1 Hour",
    "dailyTime": "1 Hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: The 'What' and 'Why' of Taylor Series\",\"duration\":\"Minutes 0-20\",\"description\":\"Understand the fundamental idea behind Taylor series: approximating complex functions with simpler polynomials near a specific point.\",\"tasks\":[\"Watch a short introductory video on the concept of Taylor series (e.g., Khan Academy or 3Blue1Brown).\",\"Review the general formula, focusing on the Maclaurin series (expansion around x=0).\",\"Look at the first few terms for common functions like sin(x) and cos(x) to see the pattern.\"]},{\"title\":\"Phase 2: The Physics Connection - Small-Angle Approximation\",\"duration\":\"Minutes 20-50\",\"description\":\"Apply the Taylor series to a real-world physics problem to understand its practical power in simplifying calculations.\",\"tasks\":[\"Learn the differential equation for a simple pendulum, noting the difficult sin(Œ∏) term.\",\"Apply the Taylor expansion for sin(Œ∏) ‚âà Œ∏ for small angles (the first term of the series).\",\"Observe how this approximation transforms the equation into the much simpler Simple Harmonic Motion equation.\",\"Work through one guided example of calculating a pendulum's period using this approximation.\"]},{\"title\":\"Phase 3: Review and Further Exploration\",\"duration\":\"Minutes 50-60\",\"description\":\"Solidify your understanding and identify resources for deeper learning.\",\"tasks\":[\"In your own words, write down a one-sentence summary of what a Taylor series does.\",\"Briefly research one other application in physics, such as gravitational potential near Earth's surface or electrostatic potentials.\",\"Bookmark a more in-depth resource to return to when you have more time.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-07T20:14:41.192Z",
    "completedAt": "2025-09-07T20:23:24.158Z",
    "isCompleted": true,
    "currentPhase": 0,
    "progress": [
      {
        "id": "be36b730-4ea8-475a-bcca-8452cfe21b9f",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 0,
        "taskIndex": 0,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:15:31.338Z"
      },
      {
        "id": "4f77eef9-f82b-424b-8b5d-e744bc02394f",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 0,
        "taskIndex": 1,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:16:29.121Z"
      },
      {
        "id": "d6527d9a-a03f-42a7-a452-41357908c9fd",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 0,
        "taskIndex": 2,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:16:54.358Z"
      },
      {
        "id": "317fc1c5-9837-4440-b36d-22973dce9c2b",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 1,
        "taskIndex": 0,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:17:20.747Z"
      },
      {
        "id": "b0300f56-f420-471b-a75f-d3f96016c9fd",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 1,
        "taskIndex": 1,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:18:01.810Z"
      },
      {
        "id": "5e55e8a7-87cf-4a81-bf83-cbade7ff5a22",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 1,
        "taskIndex": 2,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:20:39.255Z"
      },
      {
        "id": "684164fe-951e-49e1-8e3d-7587b1af67bd",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 1,
        "taskIndex": 3,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:21:37.055Z"
      },
      {
        "id": "36ac8038-8a49-45e1-b908-1c74ccae1101",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 2,
        "taskIndex": 0,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:21:57.296Z"
      },
      {
        "id": "3ea21733-2afb-4677-b666-9b0e9e684590",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 2,
        "taskIndex": 1,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:22:39.624Z"
      },
      {
        "id": "87f8d921-32d1-427b-bf92-953310218a38",
        "courseId": "98d73722-868f-4b15-b94c-9cdca086dbb3",
        "phaseIndex": 2,
        "taskIndex": 2,
        "isCompleted": true,
        "completedAt": "2025-09-07T20:23:23.293Z"
      }
    ]
  },
  {
    "id": "0f06e33d-78ac-41ff-a3c7-e5c5738b5896",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "04483653-12de-469e-9df4-6f856702ab79",
    "title": "Navigating Pregnancy and Childbirth in the Netherlands: A 1-Week Guide",
    "description": "This 1-week plan provides a crash course on the Dutch maternity care system. In just one hour a day, you'll learn about key roles, common practices, prenatal care, birth options, and postpartum support to feel prepared and confident.",
    "duration": "1 week",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Understanding the Dutch Maternity System\",\"duration\":\"Days 1-2\",\"description\":\"Get familiar with the key players and structure of the Dutch healthcare system for pregnancy.\",\"tasks\":[\"Research the role of the midwife (verloskundige) versus the gynecologist (gynaecoloog) in the Netherlands.\",\"Learn about the standard prenatal appointment schedule.\",\"Find and review 2-3 local midwifery practices (verloskundigenpraktijk) online.\"]},{\"title\":\"Phase 2: Prenatal Care & Key Decisions\",\"duration\":\"Days 3-4\",\"description\":\"Explore the standard tests and choices you'll need to make during your pregnancy.\",\"tasks\":[\"Read about prenatal screening options like the NIPT test and the 13/20-week scans on the RIVM website.\",\"Compare the different birth location options: home birth (thuisbevalling), birthing center (geboortecentrum), and hospital birth (poliklinische bevalling).\",\"Understand the role of 'kraamzorg' (postnatal maternity care) and how to register for it.\"]},{\"title\":\"Phase 3: Preparing for Birth & Postpartum\",\"duration\":\"Days 5-7\",\"description\":\"Focus on the practical steps for labor, delivery, and the period immediately after birth.\",\"tasks\":[\"Research common pain relief options available in the Netherlands.\",\"Draft a simple birth plan (geboorteplan) outlining your key preferences.\",\"Learn the process for registering your baby's birth at the municipality (gemeente) after delivery.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-03T22:20:01.176Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  },
  {
    "id": "f3eabf23-614a-41c3-8722-d41b76ced72d",
    "userId": "639a8b1e-ed70-429b-8f10-d6edfb1226a8",
    "learningPlanId": "4b53dee8-4495-4f83-b443-10cb46593bac",
    "title": "Tensors for General Relativity: A 3-Week Foundation",
    "description": "This is an intensive 3-week plan for a beginner to build a foundational understanding of tensors and their application in General Relativity. By the end, you will grasp the core mathematical concepts and see how they describe the curvature of spacetime.",
    "duration": "3 weeks",
    "dailyTime": "1 hour",
    "skillLevel": null,
    "phases": "[{\"title\":\"Phase 1: Foundations - Vectors, Dual Vectors, and Tensors\",\"duration\":\"Week 1\",\"description\":\"This week focuses on the essential prerequisites from linear algebra and introduces the fundamental definition of a tensor.\",\"tasks\":[\"Review vector spaces, basis vectors, and basis transformations.\",\"Understand dual vector spaces and covectors (one-forms).\",\"Learn the formal definition of a tensor as a multilinear map.\",\"Master the Einstein summation convention for index notation.\",\"Practice with basic tensors like the Kronecker delta and transformations of tensor components.\"]},{\"title\":\"Phase 2: Tensor Algebra and Calculus on Manifolds\",\"duration\":\"Week 2\",\"description\":\"Build upon the foundation by learning how to manipulate tensors and introducing the calculus required for curved spaces.\",\"tasks\":[\"Study tensor operations: outer product, contraction, and inner product.\",\"Understand the metric tensor and its role in defining geometry (lengths and angles).\",\"Practice raising and lowering indices using the metric tensor.\",\"Get introduced to the concept of manifolds and coordinate charts.\",\"Learn about the covariant derivative and why it's necessary for differentiation in curved spacetime.\"]},{\"title\":\"Phase 3: Application to General Relativity\",\"duration\":\"Week 3\",\"description\":\"Connect the mathematical machinery to the core physical concepts of Einstein's theory.\",\"tasks\":[\"Understand spacetime as a 4-dimensional Lorentzian manifold.\",\"Learn about the stress-energy tensor, which represents matter and energy.\",\"Study the concept of geodesic motion for particles in curved spacetime.\",\"Be introduced to the Riemann curvature tensor as the measure of spacetime curvature.\",\"Conceptually understand the structure of the Einstein Field Equations, which relate geometry to matter.\",\"Project: Calculate the Christoffel symbols for a simple metric, like the surface of a 2D sphere.\"]}]",
    "originalPlanId": null,
    "enrolledAt": "2025-09-03T09:58:51.907Z",
    "completedAt": null,
    "isCompleted": false,
    "currentPhase": 0,
    "progress": []
  }
]